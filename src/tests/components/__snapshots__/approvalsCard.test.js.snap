// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test On Approval Card Component render() Should Render Approval Card Component 1`] = `
<ApprovalCard>
  <WithStyles(ForwardRef(Card))
    className="makeStyles-root-1"
  >
    <ForwardRef(Card)
      className="makeStyles-root-1"
      classes={
        Object {
          "root": "MuiCard-root",
        }
      }
    >
      <WithStyles(ForwardRef(Paper))
        className="MuiCard-root makeStyles-root-1"
        elevation={1}
      >
        <ForwardRef(Paper)
          className="MuiCard-root makeStyles-root-1"
          classes={
            Object {
              "elevation0": "MuiPaper-elevation0",
              "elevation1": "MuiPaper-elevation1",
              "elevation10": "MuiPaper-elevation10",
              "elevation11": "MuiPaper-elevation11",
              "elevation12": "MuiPaper-elevation12",
              "elevation13": "MuiPaper-elevation13",
              "elevation14": "MuiPaper-elevation14",
              "elevation15": "MuiPaper-elevation15",
              "elevation16": "MuiPaper-elevation16",
              "elevation17": "MuiPaper-elevation17",
              "elevation18": "MuiPaper-elevation18",
              "elevation19": "MuiPaper-elevation19",
              "elevation2": "MuiPaper-elevation2",
              "elevation20": "MuiPaper-elevation20",
              "elevation21": "MuiPaper-elevation21",
              "elevation22": "MuiPaper-elevation22",
              "elevation23": "MuiPaper-elevation23",
              "elevation24": "MuiPaper-elevation24",
              "elevation3": "MuiPaper-elevation3",
              "elevation4": "MuiPaper-elevation4",
              "elevation5": "MuiPaper-elevation5",
              "elevation6": "MuiPaper-elevation6",
              "elevation7": "MuiPaper-elevation7",
              "elevation8": "MuiPaper-elevation8",
              "elevation9": "MuiPaper-elevation9",
              "outlined": "MuiPaper-outlined",
              "root": "MuiPaper-root",
              "rounded": "MuiPaper-rounded",
            }
          }
          elevation={1}
        >
          <div
            className="MuiPaper-root MuiCard-root makeStyles-root-1 MuiPaper-elevation1 MuiPaper-rounded"
          >
            <WithStyles(ForwardRef(Typography))
              style={
                Object {
                  "backgroundColor": "#0074D9",
                  "color": "#ffff",
                  "fontWeight": "bold",
                  "paddingBottom": "10px",
                  "paddingTop": "10px",
                  "textAlign": "center",
                }
              }
            >
              <ForwardRef(Typography)
                classes={
                  Object {
                    "alignCenter": "MuiTypography-alignCenter",
                    "alignJustify": "MuiTypography-alignJustify",
                    "alignLeft": "MuiTypography-alignLeft",
                    "alignRight": "MuiTypography-alignRight",
                    "body1": "MuiTypography-body1",
                    "body2": "MuiTypography-body2",
                    "button": "MuiTypography-button",
                    "caption": "MuiTypography-caption",
                    "colorError": "MuiTypography-colorError",
                    "colorInherit": "MuiTypography-colorInherit",
                    "colorPrimary": "MuiTypography-colorPrimary",
                    "colorSecondary": "MuiTypography-colorSecondary",
                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                    "displayBlock": "MuiTypography-displayBlock",
                    "displayInline": "MuiTypography-displayInline",
                    "gutterBottom": "MuiTypography-gutterBottom",
                    "h1": "MuiTypography-h1",
                    "h2": "MuiTypography-h2",
                    "h3": "MuiTypography-h3",
                    "h4": "MuiTypography-h4",
                    "h5": "MuiTypography-h5",
                    "h6": "MuiTypography-h6",
                    "noWrap": "MuiTypography-noWrap",
                    "overline": "MuiTypography-overline",
                    "paragraph": "MuiTypography-paragraph",
                    "root": "MuiTypography-root",
                    "srOnly": "MuiTypography-srOnly",
                    "subtitle1": "MuiTypography-subtitle1",
                    "subtitle2": "MuiTypography-subtitle2",
                  }
                }
                style={
                  Object {
                    "backgroundColor": "#0074D9",
                    "color": "#ffff",
                    "fontWeight": "bold",
                    "paddingBottom": "10px",
                    "paddingTop": "10px",
                    "textAlign": "center",
                  }
                }
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                  style={
                    Object {
                      "backgroundColor": "#0074D9",
                      "color": "#ffff",
                      "fontWeight": "bold",
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                      "textAlign": "center",
                    }
                  }
                >
                  Request Info
                </p>
              </ForwardRef(Typography)>
            </WithStyles(ForwardRef(Typography))>
            <div
              style={
                Object {
                  "marginLeft": "20px",
                  "marginRight": "20px",
                }
              }
            >
              <p
                style={
                  Object {
                    "display": "flex",
                    "textAlign": "center",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "fontWeight": "bold",
                      "margin": "auto",
                    }
                  }
                >
                  <WithStyles(ForwardRef(Avatar))
                    className="makeStyles-large-2"
                    style={
                      Object {
                        "border": "4px solid #EFEFEF",
                      }
                    }
                  >
                    <ForwardRef(Avatar)
                      className="makeStyles-large-2"
                      classes={
                        Object {
                          "circle": "MuiAvatar-circle",
                          "colorDefault": "MuiAvatar-colorDefault",
                          "fallback": "MuiAvatar-fallback",
                          "img": "MuiAvatar-img",
                          "root": "MuiAvatar-root",
                          "rounded": "MuiAvatar-rounded",
                          "square": "MuiAvatar-square",
                        }
                      }
                      style={
                        Object {
                          "border": "4px solid #EFEFEF",
                        }
                      }
                    >
                      <div
                        className="MuiAvatar-root MuiAvatar-circle makeStyles-large-2 MuiAvatar-colorDefault"
                        style={
                          Object {
                            "border": "4px solid #EFEFEF",
                          }
                        }
                      >
                        <ForwardRef
                          className="MuiAvatar-fallback"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="MuiAvatar-fallback"
                          >
                            <ForwardRef(SvgIcon)
                              className="MuiAvatar-fallback"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root MuiAvatar-fallback"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                      </div>
                    </ForwardRef(Avatar)>
                  </WithStyles(ForwardRef(Avatar))>
                </span>
              </p>
              <p
                style={
                  Object {
                    "color": "#646464",
                    "fontSize": "12px",
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "margin": "auto",
                      "paddingRight": "5px",
                    }
                  }
                />
                <span
                  style={
                    Object {
                      "margin": "auto",
                      "paddingRight": "5px",
                    }
                  }
                />
              </p>
              <p
                style={
                  Object {
                    "paddingLeft": "45px",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "fontWeight": "bold",
                      "paddingRight": "5px",
                    }
                  }
                >
                  Trip Type:
                </span>
                <span />
              </p>
              <p
                style={
                  Object {
                    "paddingLeft": "45px",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "fontWeight": "bold",
                      "paddingRight": "5px",
                    }
                  }
                >
                  Status:
                </span>
                <span />
              </p>
            </div>
            <WithStyles(ForwardRef(Divider))>
              <ForwardRef(Divider)
                classes={
                  Object {
                    "absolute": "MuiDivider-absolute",
                    "inset": "MuiDivider-inset",
                    "light": "MuiDivider-light",
                    "middle": "MuiDivider-middle",
                    "root": "MuiDivider-root",
                    "vertical": "MuiDivider-vertical",
                  }
                }
              >
                <hr
                  className="MuiDivider-root"
                />
              </ForwardRef(Divider)>
            </WithStyles(ForwardRef(Divider))>
            <div
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              <p
                style={
                  Object {
                    "display": "flex",
                    "marginLeft": "70px",
                  }
                }
              >
                <WithStyles(ForwardRef(Button))
                  className="makeStyles-accept_button-3"
                  color="primary"
                  disabled={false}
                  size="small"
                  type="button"
                  variant="contained"
                >
                  <ForwardRef(Button)
                    className="makeStyles-accept_button-3"
                    classes={
                      Object {
                        "colorInherit": "MuiButton-colorInherit",
                        "contained": "MuiButton-contained",
                        "containedPrimary": "MuiButton-containedPrimary",
                        "containedSecondary": "MuiButton-containedSecondary",
                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                        "disableElevation": "MuiButton-disableElevation",
                        "disabled": "Mui-disabled",
                        "endIcon": "MuiButton-endIcon",
                        "focusVisible": "Mui-focusVisible",
                        "fullWidth": "MuiButton-fullWidth",
                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                        "label": "MuiButton-label",
                        "outlined": "MuiButton-outlined",
                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                        "root": "MuiButton-root",
                        "sizeLarge": "MuiButton-sizeLarge",
                        "sizeSmall": "MuiButton-sizeSmall",
                        "startIcon": "MuiButton-startIcon",
                        "text": "MuiButton-text",
                        "textPrimary": "MuiButton-textPrimary",
                        "textSecondary": "MuiButton-textSecondary",
                        "textSizeLarge": "MuiButton-textSizeLarge",
                        "textSizeSmall": "MuiButton-textSizeSmall",
                      }
                    }
                    color="primary"
                    disabled={false}
                    size="small"
                    type="button"
                    variant="contained"
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiButton-root MuiButton-contained makeStyles-accept_button-3 MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall"
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="Mui-focusVisible"
                      type="button"
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiButton-root MuiButton-contained makeStyles-accept_button-3 MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="button"
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="Mui-focusVisible"
                        type="button"
                      >
                        <button
                          className="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-accept_button-3 MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall"
                          disabled={false}
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <span
                            className="MuiButton-label"
                          >
                            ACCEPT
                          </span>
                          <NoSsr>
                            <WithStyles(undefined)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(undefined)>
                          </NoSsr>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(Button)>
                </WithStyles(ForwardRef(Button))>
                <WithStyles(ForwardRef(Button))
                  className="makeStyles-reject_button-4"
                  color="primary"
                  disabled={false}
                  size="small"
                  type="button"
                  variant="contained"
                >
                  <ForwardRef(Button)
                    className="makeStyles-reject_button-4"
                    classes={
                      Object {
                        "colorInherit": "MuiButton-colorInherit",
                        "contained": "MuiButton-contained",
                        "containedPrimary": "MuiButton-containedPrimary",
                        "containedSecondary": "MuiButton-containedSecondary",
                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                        "disableElevation": "MuiButton-disableElevation",
                        "disabled": "Mui-disabled",
                        "endIcon": "MuiButton-endIcon",
                        "focusVisible": "Mui-focusVisible",
                        "fullWidth": "MuiButton-fullWidth",
                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                        "label": "MuiButton-label",
                        "outlined": "MuiButton-outlined",
                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                        "root": "MuiButton-root",
                        "sizeLarge": "MuiButton-sizeLarge",
                        "sizeSmall": "MuiButton-sizeSmall",
                        "startIcon": "MuiButton-startIcon",
                        "text": "MuiButton-text",
                        "textPrimary": "MuiButton-textPrimary",
                        "textSecondary": "MuiButton-textSecondary",
                        "textSizeLarge": "MuiButton-textSizeLarge",
                        "textSizeSmall": "MuiButton-textSizeSmall",
                      }
                    }
                    color="primary"
                    disabled={false}
                    size="small"
                    type="button"
                    variant="contained"
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiButton-root MuiButton-contained makeStyles-reject_button-4 MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall"
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="Mui-focusVisible"
                      type="button"
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiButton-root MuiButton-contained makeStyles-reject_button-4 MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="button"
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="Mui-focusVisible"
                        type="button"
                      >
                        <button
                          className="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-reject_button-4 MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall"
                          disabled={false}
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <span
                            className="MuiButton-label"
                          >
                            REJECT
                          </span>
                          <NoSsr>
                            <WithStyles(undefined)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(undefined)>
                          </NoSsr>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(Button)>
                </WithStyles(ForwardRef(Button))>
              </p>
            </div>
          </div>
        </ForwardRef(Paper)>
      </WithStyles(ForwardRef(Paper))>
    </ForwardRef(Card)>
  </WithStyles(ForwardRef(Card))>
</ApprovalCard>
`;
